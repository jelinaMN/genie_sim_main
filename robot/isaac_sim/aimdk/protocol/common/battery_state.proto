syntax = "proto3";
package aimdk.protocol;

import "aimdk/protocol/common/timestamp.proto";


/**
 *@brief Battery status
 */
enum PowerSupplyStatus {
  PowerSupplyStatus_UNDEFINED = 0;
  PowerSupplyStatus_CHARGING = 1;
  PowerSupplyStatus_DISCHARGING = 2;
  PowerSupplyStatus_NOT_CHARGING = 3;
  PowerSupplyStatus_FULL = 4;
}

/**
 *@brief Battery health status
 */
enum PowerSupplyHealth {
  PowerSupplyHealth_UNDEFINED = 0;
  PowerSupplyHealth_GOOD = 1;
  PowerSupplyHealth_OVERHEAT = 2;
  PowerSupplyHealth_DEAD = 3;
  PowerSupplyHealth_OVERVOLTAGE = 4;
  PowerSupplyHealth_UNSPEC_FAILURE = 5;
  PowerSupplyHealth_COLD = 6;
  PowerSupplyHealth_WATCHDOG_TIMER_EXPIRE = 7;
  PowerSupplyHealth_SAFETY_TIMER_EXPIRE = 8;
}


/**
 * @brief Battery technology
 */
enum PowerSupplyTechnology {
  PowerSupplyTechnology_UNDEFINED = 0;
  PowerSupplyTechnology_NIMH = 1;
  PowerSupplyTechnology_LION = 2;
  PowerSupplyTechnology_LIPO = 3;
  PowerSupplyTechnology_LIFE = 4;
  PowerSupplyTechnology_NICD = 5;
  PowerSupplyTechnology_LIMN = 6;
}

/**
 * @brief Battery status Corresponding to ROS: sensor_msgs/BatteryState.msg
 */
message BatteryState {
  // Timestamp
  Timestamp timestamp = 1;

  // Battery voltage
  float voltage = 2;

  // Current
  float current = 3;

  // Charge
  float charge = 4;

  // Battery capacity
  float capacity = 5;

  // Design capacity
  float design_capacity = 6;

  // Battery percentage
  float percentage = 7;

  // Battery status
  PowerSupplyStatus power_supply_status = 8;

  // Battery health status
  PowerSupplyHealth power_supply_health = 9;

  // Battery technology
  PowerSupplyTechnology power_supply_technology = 10;

  // Battery cell voltage
  repeated float cell_voltage = 11;

  // Battery location
  string location = 12;

  // Battery serial number
  string serial_number = 13;

  // Battery power
  float power = 14;

  // Battery temperature
  float temperature = 15;
};