# -*- coding: utf-8 -*-
# Copyright (c) 2023-2025, AgiBot Inc. All Rights Reserved.
# Author: Genie Sim Team
# License: Mozilla Public License Version 2.0

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: aimdk/protocol/common/battery_state.proto
# Protobuf Python Version: 5.29.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    29,
    0,
    '',
    'aimdk/protocol/common/battery_state.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from aimdk.protocol.common import timestamp_pb2 as aimdk_dot_protocol_dot_common_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n)aimdk/protocol/common/battery_state.proto\x12\x0e\x61imdk.protocol\x1a%aimdk/protocol/common/timestamp.proto\"\xd8\x03\n\x0c\x42\x61tteryState\x12,\n\ttimestamp\x18\x01 \x01(\x0b\x32\x19.aimdk.protocol.Timestamp\x12\x0f\n\x07voltage\x18\x02 \x01(\x02\x12\x0f\n\x07\x63urrent\x18\x03 \x01(\x02\x12\x0e\n\x06\x63harge\x18\x04 \x01(\x02\x12\x10\n\x08\x63\x61pacity\x18\x05 \x01(\x02\x12\x17\n\x0f\x64\x65sign_capacity\x18\x06 \x01(\x02\x12\x12\n\npercentage\x18\x07 \x01(\x02\x12>\n\x13power_supply_status\x18\x08 \x01(\x0e\x32!.aimdk.protocol.PowerSupplyStatus\x12>\n\x13power_supply_health\x18\t \x01(\x0e\x32!.aimdk.protocol.PowerSupplyHealth\x12\x46\n\x17power_supply_technology\x18\n \x01(\x0e\x32%.aimdk.protocol.PowerSupplyTechnology\x12\x14\n\x0c\x63\x65ll_voltage\x18\x0b \x03(\x02\x12\x10\n\x08location\x18\x0c \x01(\t\x12\x15\n\rserial_number\x18\r \x01(\t\x12\r\n\x05power\x18\x0e \x01(\x02\x12\x13\n\x0btemperature\x18\x0f \x01(\x02*\xb7\x01\n\x11PowerSupplyStatus\x12\x1f\n\x1bPowerSupplyStatus_UNDEFINED\x10\x00\x12\x1e\n\x1aPowerSupplyStatus_CHARGING\x10\x01\x12!\n\x1dPowerSupplyStatus_DISCHARGING\x10\x02\x12\"\n\x1ePowerSupplyStatus_NOT_CHARGING\x10\x03\x12\x1a\n\x16PowerSupplyStatus_FULL\x10\x04*\xc9\x02\n\x11PowerSupplyHealth\x12\x1f\n\x1bPowerSupplyHealth_UNDEFINED\x10\x00\x12\x1a\n\x16PowerSupplyHealth_GOOD\x10\x01\x12\x1e\n\x1aPowerSupplyHealth_OVERHEAT\x10\x02\x12\x1a\n\x16PowerSupplyHealth_DEAD\x10\x03\x12!\n\x1dPowerSupplyHealth_OVERVOLTAGE\x10\x04\x12$\n PowerSupplyHealth_UNSPEC_FAILURE\x10\x05\x12\x1a\n\x16PowerSupplyHealth_COLD\x10\x06\x12+\n\'PowerSupplyHealth_WATCHDOG_TIMER_EXPIRE\x10\x07\x12)\n%PowerSupplyHealth_SAFETY_TIMER_EXPIRE\x10\x08*\xfc\x01\n\x15PowerSupplyTechnology\x12#\n\x1fPowerSupplyTechnology_UNDEFINED\x10\x00\x12\x1e\n\x1aPowerSupplyTechnology_NIMH\x10\x01\x12\x1e\n\x1aPowerSupplyTechnology_LION\x10\x02\x12\x1e\n\x1aPowerSupplyTechnology_LIPO\x10\x03\x12\x1e\n\x1aPowerSupplyTechnology_LIFE\x10\x04\x12\x1e\n\x1aPowerSupplyTechnology_NICD\x10\x05\x12\x1e\n\x1aPowerSupplyTechnology_LIMN\x10\x06\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'aimdk.protocol.common.battery_state_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_POWERSUPPLYSTATUS']._serialized_start=576
  _globals['_POWERSUPPLYSTATUS']._serialized_end=759
  _globals['_POWERSUPPLYHEALTH']._serialized_start=762
  _globals['_POWERSUPPLYHEALTH']._serialized_end=1091
  _globals['_POWERSUPPLYTECHNOLOGY']._serialized_start=1094
  _globals['_POWERSUPPLYTECHNOLOGY']._serialized_end=1346
  _globals['_BATTERYSTATE']._serialized_start=101
  _globals['_BATTERYSTATE']._serialized_end=573
# @@protoc_insertion_point(module_scope)
