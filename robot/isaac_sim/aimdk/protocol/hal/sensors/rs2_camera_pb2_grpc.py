# Copyright (c) 2023-2025, AgiBot Inc. All Rights Reserved.
# Author: Genie Sim Team
# License: Mozilla Public License Version 2.0

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from aimdk.protocol.hal.sensors import rs2_camera_pb2 as aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in aimdk/protocol/hal/sensors/rs2_camera_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class CameraServiceStub(object):
    """*
    @brief Service provided by the realsense_camera_module::RealsenseCameraModule module in aimrt_hal
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCameraInfo = channel.unary_unary(
                '/aimdk.protocol.CameraService/GetCameraInfo',
                request_serializer=aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraInfoRequest.SerializeToString,
                response_deserializer=aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraInfoResponse.FromString,
                _registered_method=True)
        self.GetCameraData = channel.unary_unary(
                '/aimdk.protocol.CameraService/GetCameraData',
                request_serializer=aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraDataRequest.SerializeToString,
                response_deserializer=aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraDataResponse.FromString,
                _registered_method=True)


class CameraServiceServicer(object):
    """*
    @brief Service provided by the realsense_camera_module::RealsenseCameraModule module in aimrt_hal
    """

    def GetCameraInfo(self, request, context):
        """*
        @brief Get the camera internal reference information received by realsense_camera_module::RealsenseCameraModule.
        @param GetCameraInfoRequest Camera Serial Number
        @return GetCameraInfoResponse CameraInfoResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCameraData(self, request, context):
        """*
        @brief Get realsense_camera_module::RealsenseCameraModule Received camera data, including camera internal reference, color and depth image information.
        @param GetCameraDataRequest Camera Serial Number
        @return GetCameraDataResponse Detailed data
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CameraServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCameraInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraInfo,
                    request_deserializer=aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraInfoRequest.FromString,
                    response_serializer=aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraInfoResponse.SerializeToString,
            ),
            'GetCameraData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCameraData,
                    request_deserializer=aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraDataRequest.FromString,
                    response_serializer=aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraDataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'aimdk.protocol.CameraService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('aimdk.protocol.CameraService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CameraService(object):
    """*
    @brief Service provided by the realsense_camera_module::RealsenseCameraModule module in aimrt_hal
    """

    @staticmethod
    def GetCameraInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/aimdk.protocol.CameraService/GetCameraInfo',
            aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraInfoRequest.SerializeToString,
            aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCameraData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/aimdk.protocol.CameraService/GetCameraData',
            aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraDataRequest.SerializeToString,
            aimdk_dot_protocol_dot_hal_dot_sensors_dot_rs2__camera__pb2.GetCameraDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
