syntax = "proto3";
package aimdk.protocol;

import public "aimdk/protocol/common/header.proto";
import public "aimdk/protocol/common/joint.proto";
import public "aimdk/protocol/common/se3_pose.proto";

message JointStatesChannel {
  /** header */
  Header header = 1;

  /**
   * Joint status, including angle, speed, torque
   */
  repeated JointState states = 2;
}
message IKStatus {
  repeated string joint_names = 1;
  repeated double joint_positions = 2;
  bool isSuccess = 3;
}

message JointCommandsChannel {
  /** header */
  Header header = 1;

  /**
   * Joint commands
   */
  repeated JointCommand commands = 2;
}

message GetJointReq {
  string serial_no = 1;
}
message GetJointRsp {
  repeated JointState states = 1;
}
message GetEEPoseReq {
  bool is_right = 1;
}
message GetEEPoseRsp {
  string prim_path = 1;
  SE3RpyPose ee_pose = 2;
}
message GetIKStatusReq {
  bool is_right = 1;
  repeated SE3RpyPose target_pose = 2;
  bool ObsAvoid = 3;
}
message GetIKStatusRsp {
  repeated IKStatus IKStatus = 2;
}


message SetJointReq {
  repeated JointCommand commands = 1;
  bool is_trajectory = 2;
}
message SetJointRsp {
  string errmsg = 1;
}

service JointControlService {
  rpc GetJointPosition(GetJointReq) returns (GetJointRsp);
  rpc SetJointPosition(SetJointReq) returns (SetJointRsp);
  rpc GetIKStatus(GetIKStatusReq) returns (GetIKStatusRsp);
  rpc GetEEPose(GetEEPoseReq) returns (GetEEPoseRsp);
}