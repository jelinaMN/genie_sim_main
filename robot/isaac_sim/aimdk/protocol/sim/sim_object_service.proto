syntax = "proto3";
package aimdk.protocol;

import public "aimdk/protocol/common/se3_pose.proto";
import public "aimdk/protocol/common/vec3.proto";

message AddObjectReq {
  string usd_path = 1;//Object usd resource location
  string prim_path = 2;//primpath where objects are placed in the scene
  string label_name = 3;//Object label name
  SE3RpyPose object_pose = 4;//The position of the object being placed
  Vec3 object_scale = 5;//Object scaling ratio
  Color object_color = 6;
  string object_material = 7;
  double object_mass = 8;
  bool add_particle = 9;
  Vec3 particle_position = 10;
  Vec3 particle_scale = 11;
  Color particle_color = 12;
  Vec3 object_com = 13;//Object center of gravity offset
  string model_type = 14;//Object collision model
  double static_friction = 15;//static friction coefficient of object
  double dynamic_friction = 16;//Object dynamic friction coefficient
}
message Color {
  float r = 1;
  float g = 2;
  float b = 3;
}
message AddObjectRsp {
  string prim_path = 1;
  string label_name = 2;
}
message GetObjectPoseReq {
  string prim_path = 1;
}
message GetObjectPoseRsp {
  string prim_path = 1;
  SE3RpyPose object_pose = 2;
}
message GetObjectJointReq {
  string prim_path = 1;
}
message GetObjectJointRsp {
  repeated string joint_names = 1;
  repeated double joint_positions = 2;
  repeated double joint_velocities = 3;
}
message SetTargetPointReq {
  Vec3 point_position = 1;
}
message SetTargetPointRsp {
  string msg = 1;
}


service SimObjectService {
  rpc AddObject(AddObjectReq) returns (AddObjectRsp);
  rpc GetObjectPose(GetObjectPoseReq) returns (GetObjectPoseRsp);
  rpc GetObjectJoint(GetObjectJointReq) returns (GetObjectJointRsp);
  rpc SetTargetPoint(SetTargetPointReq) returns (SetTargetPointRsp);
}
